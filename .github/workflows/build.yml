name: Image Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - id: nodeversion
        run: echo ::set-output name=NODE::$(cat .nvmrc)
      - name: restore Cache
        uses: actions/cache@master
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{steps.nodeversion.outputs.NODE}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nodeversion.outputs.NODE }}
      - name: install
        run: yarn
      - name: lint
        run: yarn lint
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - run: |
          docker build -t lambda_wishlist:latest .
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 988455245074.dkr.ecr.us-east-2.amazonaws.com
          docker tag lambda_wishlist:latest 988455245074.dkr.ecr.us-east-2.amazonaws.com/stable/lambda_wishlist:latest
          docker push 988455245074.dkr.ecr.us-east-2.amazonaws.com/stable/lambda_wishlist:latest
